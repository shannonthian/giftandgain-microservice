services:
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ".:/frontend"
  #     - "/frontend/node_modules"
  #   ports:
  #     - 3001:9060
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true

  # item-server:
  #   container_name: listing-server
  #   build:
  #     context: listing
  #     dockerfile: Dockerfile
  #   image: listing-server:latest
  #   ports:
  #     - 16666:8080
  #   depends_on:
  #     - postgres
  #   networks:
  #     - spring-cloud-network
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
  #     SPRING_DATASOURCE_USERNAME: user
  #     SPRING_DATASOURCE_PASSWORD: password

  # inventory-management:
  #   container_name: inventory-management
  #   build:
  #     context: inventory-management
  #     dockerfile: Dockerfile
  #   image: inventory-management:latest
  #   ports:
  #     - 16667:8080
  #   networks:
  #     - spring-cloud-network
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
  #     SPRING_DATASOURCE_USERNAME: user
  #     SPRING_DATASOURCE_PASSWORD: password

  # auth:
  #   container_name: auth
  #   build:
  #     context: auth
  #     dockerfile: Dockerfile
  #   image: auth:latest
  #   ports:
  #     - 16668:8080
  #   networks:
  #     - spring-cloud-network
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
  #     SPRING_DATASOURCE_USERNAME: user
  #     SPRING_DATASOURCE_PASSWORD: password

  report:
    container_name: report
    build:
      context: report
      dockerfile: Dockerfile
    image: report:latest
    ports:
      - 16669:8080
    depends_on:
      - postgres
    networks:
      - spring-cloud-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      S3_REGION: ap-southeast-1
      S3_BUCKET_NAME: gift-and-gain-bucket
      AWS_ACCESS_KEY_ID: 
      AWS_SECRET_ACCESS_KEY: 
      SPRING_DATA_MONGODB_URI: 

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    networks:
      - spring-cloud-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

networks:
  spring-cloud-network:
    driver: bridge
