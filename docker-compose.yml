services:
  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - ".:/frontend"
      - "/frontend/node_modules"
    ports:
      - 3001:9060
    environment:
      - CHOKIDAR_USEPOLLING=true

  item-server:
    container_name: listing-server
    build:
      context: listing
      dockerfile: Dockerfile
    image: listing-server:latest
    ports:
      - 16666:8080
    networks:
      - spring-cloud-network

  inventory-management:
    container_name: inventory-management
    build:
      context: inventory-management
      dockerfile: Dockerfile
    image: inventory-management:latest
    ports:
      - 16667:8080
    networks:
      - spring-cloud-network

  auth:
    container_name: auth
    build:
      context: auth
      dockerfile: Dockerfile
    image: auth:latest
    ports:
      - 16668:8080
    networks:
      - spring-cloud-network

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

networks:
  spring-cloud-network:
    driver: bridge
