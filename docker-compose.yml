services:
  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - ".:/frontend"
      - "/frontend/node_modules"
    ports:
      - 3001:9060
    environment:
      - CHOKIDAR_USEPOLLING=true
      - INVENTORY_MICROSERVICE_URL=http://localhost:16667
      - AUTH_MICROSERVICE_URL=http://localhost:16668

  inventory-management:
    container_name: inventory-management
    build:
      context: inventory-management
    image: inventory-management:latest
    ports:
      - 16667:8080
    networks:
      - spring-cloud-network
    depends_on:
      - postgres
    # command:
    #   [
    #     "./wait-for-it.sh",
    #     "giftandgain-db:3306",
    #     "java",
    #     "-jar",
    #     "/app/app.jar",
    #   ]
    environment:
      # SPRING_DATASOURCE_URL: jdbc:mysql://giftandgain-db:3306/giftandgain
      # SPRING_DATASOURCE_USERNAME: giftandgain
      # SPRING_DATASOURCE_PASSWORD: giftandgain123
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      CORS_ALLOWED_ORIGINS: http://localhost:3001

  auth:
    container_name: auth
    build:
      context: auth
      dockerfile: Dockerfile
    image: auth:latest
    ports:
      - 16668:8080
    depends_on:
      - postgres
    networks:
      - spring-cloud-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      CORS_ALLOWED_ORIGINS: http://localhost:3001

  report:
    container_name: report
    build:
      context: report
      dockerfile: Dockerfile
    image: report:latest
    ports:
      - 16669:8080
    depends_on:
      - postgres
    networks:
      - spring-cloud-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_MONGODB_URI:

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    networks:
      - spring-cloud-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

networks:
  spring-cloud-network:
    driver: bridge
